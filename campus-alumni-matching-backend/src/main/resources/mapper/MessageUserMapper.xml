<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.wxl.alumniMatching.mapper.MessageUserMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="org.wxl.alumniMatching.domain.entity.MessageUser">
        <id column="id" property="id" />
        <result column="content" property="content" />
        <result column="status" property="status" />
        <result column="send_time" property="sendTime" />
        <result column="send_user_id" property="sendUserId" />
        <result column="receive_user_id" property="receiveUserId" />
        <result column="message_show" property="messageShow" />
        <result column="is_system" property="isSystem" />
        <result column="is_delete" property="isDelete" />
    </resultMap>
    <update id="updateMessageStatus">
        update tb_message_user
            set status = 1
         where
             send_user_id = #{friendId}
        and
            receive_user_id = #{userId}
        and
             is_delete = 0
        and
             is_system = 0
        and
             send_time &lt; #{now}
    </update>

    <delete id="deleteMessageById">
            UPDATE tb_message_user
            SET is_delete = CASE
                                WHEN message_show = #{userId} THEN 1
                                ELSE is_delete
                END,
                message_show = CASE
                                   WHEN message_show = 0 THEN #{friendId}
                                   WHEN message_show = #{userId} THEN 0
                                   ELSE message_show
                    END
            WHERE (
                    (send_user_id = #{friendId} AND receive_user_id = #{userId})
                    OR
                    (send_user_id = #{userId} AND receive_user_id = #{friendId})
                )
              AND (message_show = 0 OR message_show = #{userId})
              AND is_system = 0
              AND is_delete = 0;
    </delete>

    <select id="getMessageById" resultType="org.wxl.alumniMatching.domain.entity.MessageUser">
        select id, content, send_time, send_user_id, receive_user_id
            from tb_message_user
        where
            (
                (send_user_id = #{friendId} and receive_user_id = #{userId})
                or
                (send_user_id = #{userId} and receive_user_id = #{friendId})
            )
          and (message_show = 0 or message_show = #{userId})
          and is_system = 0
          and is_delete = 0
          order by send_time asc;
    </select>


    <select id="selectRecentMessage" resultType="org.wxl.alumniMatching.domain.entity.MessageUser">
        select id,content,send_time,send_user_id,receive_user_id,`status`
            from tb_message_user
        where
            (
                    (send_user_id = #{friendId} and receive_user_id = #{userId})
                    or
                    (send_user_id = #{userId} and receive_user_id = #{friendId})
            )
        and (message_show = 0 or message_show = #{userId})
        and is_system = 0
        and is_delete = 0
        order by send_time asc;
    </select>

    <select id="getMessageByContent" resultType="org.wxl.alumniMatching.domain.entity.MessageUser">
        select  id,content,send_time,send_user_id,receive_user_id
            from  tb_message_user
        where
            (
                    (send_user_id = #{friendId} and receive_user_id = #{userId})
                or
                    (send_user_id = #{userId} and receive_user_id = #{friendId})
            )
          and (message_show = 0 or message_show = #{userId})
          and is_system = 0
          and is_delete = 0
          <if test="content != null and content != ''">
              and content like CONCAT('%',#{content},'%')
          </if>

          <if test="sendTime != null and sendTime != ''">
              AND DATE(send_time) = DATE(#{sendTime})
          </if>
    </select>

    <select id="getAllNotReadMessage" resultType="org.wxl.alumniMatching.domain.entity.MessageUser">
        select t2.id, t2.content,t2.status,t2.send_time,t2.send_user_id,t2.receive_user_id,t2.is_system
                from
            (select t.send_user_id, MAX(t.send_time) send_time
                          from tb_message_user t
                          where
                             is_delete = 0 and (message_show = 0 or message_show = #{userId})
                          GROUP BY t.send_user_id ORDER BY t.status asc, t.send_time DESC) t1
            left join tb_message_user t2 on t1.send_user_id = t2.send_user_id and t1.send_time = t2.send_time
                    and  (t2.send_user_id = #{userId} or t2.receive_user_id = #{userId})
        UNION
        select t2.id ,t2.content,t2.status,t2.send_time,t2.send_user_id,t2.receive_user_id,t2.is_system
                from
            (select t.receive_user_id, MAX(t.send_time) send_time
                          from tb_message_user t
                            where
                             is_delete = 0 and (message_show = 0 or message_show = #{userId})
                          GROUP BY t.receive_user_id ORDER BY t.status asc,  t.send_time DESC) t1
            left join tb_message_user t2 on t1.receive_user_id = t2.receive_user_id and t1.send_time = t2.send_time
            and  (t2.send_user_id = #{userId} or t2.receive_user_id = #{userId}) ORDER BY status asc , send_time DESC;
    </select>
<!--    优化后的sql-->
<!--    SELECT t.id, t.content, t.status, t.send_time, t.send_user_id, t.receive_user_id, t.is_system-->
<!--    FROM (-->
<!--    SELECT id, content, status, send_time, send_user_id, receive_user_id, is_system,-->
<!--    ROW_NUMBER() OVER (PARTITION BY user_id ORDER BY status ASC, send_time DESC) AS rn-->
<!--    FROM (-->
<!--    SELECT id, content, status, send_time, send_user_id, receive_user_id, is_system, send_user_id AS user_id-->
<!--    FROM tb_message_user-->
<!--    WHERE is_delete = 0 AND (message_show = 0 OR message_show = #{userId})-->
<!--    UNION ALL-->
<!--    SELECT id, content, status, send_time, send_user_id, receive_user_id, is_system, receive_user_id AS user_id-->
<!--    FROM tb_message_user-->
<!--    WHERE is_delete = 0 AND (message_show = 0 OR message_show = #{userId})-->
<!--    ) AS subquery-->
<!--    ) AS t-->
<!--    WHERE rn = 1 AND (t.send_user_id = #{userId} OR t.receive_user_id = #{userId})-->
<!--    ORDER BY t.status ASC, t.send_time DESC;-->


</mapper>
